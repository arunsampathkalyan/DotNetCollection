related_results_labels({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"http://www.w3.org/2005/Atom","xmlns$openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","xmlns$georss":"http://www.georss.org/georss","xmlns$thr":"http://purl.org/syndication/thread/1.0","id":{"$t":"tag:blogger.com,1999:blog-8980734269859237005"},"updated":{"$t":"2010-12-06T04:15:00.842-08:00"},"title":{"type":"text","$t":"DevCurry"},"subtitle":{"type":"html","$t":""},"link":[{"rel":"http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"http://www.devcurry.com/feeds/posts/default"},{"rel":"self","type":"application/atom+xml","href":"http://www.blogger.com/feeds/8980734269859237005/posts/default/-/ASP.NET?alt\u003djson-in-script\u0026max-results\u003d8"},{"rel":"alternate","type":"text/html","href":"http://www.devcurry.com/search/label/ASP.NET"},{"rel":"hub","href":"http://pubsubhubbub.appspot.com/"},{"rel":"next","type":"application/atom+xml","href":"http://www.blogger.com/feeds/8980734269859237005/posts/default/-/ASP.NET/-/ASP.NET?alt\u003djson-in-script\u0026start-index\u003d9\u0026max-results\u003d8"}],"author":[{"name":{"$t":"Suprotim Agarwal"},"uri":{"$t":"http://www.blogger.com/profile/08349831623922214390"},"email":{"$t":"noreply@blogger.com"}}],"generator":{"version":"7.00","uri":"http://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"210"},"openSearch$startIndex":{"$t":"1"},"openSearch$itemsPerPage":{"$t":"8"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-8980734269859237005.post-4987137450067919859"},"published":{"$t":"2010-12-04T02:55:00.000-08:00"},"updated":{"$t":"2010-12-04T02:55:00.446-08:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"ASP.NET"},{"scheme":"http://www.blogger.com/atom/ns#","term":"jQuery"}],"title":{"type":"text","$t":"Change Url of all Anchor Elements using jQuery"},"content":{"type":"html","$t":"\u003cp\u003eSometime ago I had written about \u003ca href\u003d\"http://www.devcurry.com/2009/06/how-to-change-url-of-aspnet-hyperlink.html\"\u003eChange the URL of an ASP.NET Hyperlink Control at runtime using jQuery\u003c/a\u003e where I had shown how to dynamically change the url of ‘one’ hyperlink control. \u003c/p\u003e\u003cp\u003eHowever if you have a requirement of changing the url’s of 'multiple' anchor elements at runtime, use this code:\u003c/p\u003e\u003cpre class\u003d\"code\"\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ehtml \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003exmlns\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"http://www.w3.org/1999/xhtml\" \u0026gt;\u003cbr /\u003e\u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ehead\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e\u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003etitle\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003c/span\u003eChange Url's of All Anchor's (from DevCurry.com)\u003cspan style\u003d\"color:blue;\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003etitle\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e\u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003escript \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003etype\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"text/javascript\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003esrc\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"\u003cbr /\u003ehttp://ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min.js\"\u0026gt;\u003cbr /\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003escript\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e\u003cbr /\u003e\u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003escript \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003etype\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"text/javascript\"\u0026gt;\u003cbr /\u003e    \u003c/span\u003e$(\u003cspan style\u003d\"color:blue;\"\u003efunction \u003c/span\u003e() {\u003cbr /\u003e        $(\u003cspan style\u003d\"color:maroon;\"\u003e'a'\u003c/span\u003e, \u003cspan style\u003d\"color:maroon;\"\u003e'#divone'\u003c/span\u003e).click(\u003cspan style\u003d\"color:blue;\"\u003efunction \u003c/span\u003e() {\u003cbr /\u003e            $(\u003cspan style\u003d\"color:blue;\"\u003ethis\u003c/span\u003e).attr(\u003cspan style\u003d\"color:maroon;\"\u003e\"href\"\u003c/span\u003e, \u003cspan style\u003d\"color:maroon;\"\u003e\"http://www.devcurry.com\"\u003c/span\u003e);\u003cbr /\u003e        });\u003cbr /\u003e    }); \u003cbr /\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003escript\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ehead\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e\u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ebody\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e    \u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ediv \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eid\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"divone\"\u0026gt;\u003cbr /\u003e        \u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ea \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003ehref\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"#\"\u0026gt;\u003c/span\u003eOne\u003cspan style\u003d\"color:blue;\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ea\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e        \u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ea \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003ehref\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"#\"\u0026gt;\u003c/span\u003eTwo\u003cspan style\u003d\"color:blue;\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ea\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e        \u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ea \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003ehref\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"#\"\u0026gt;\u003c/span\u003eThree\u003cspan style\u003d\"color:blue;\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ea\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e        \u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ea \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003ehref\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"#\"\u0026gt;\u003c/span\u003eFour\u003cspan style\u003d\"color:blue;\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ea\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e        \u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ea \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003ehref\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"#\"\u0026gt;\u003c/span\u003eFive\u003cspan style\u003d\"color:blue;\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ea\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e    \u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ediv\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ebody\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ehtml\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003c/span\u003e\u003c/pre\u003e\u003cp align\u003d\"justify\"\u003eThe code shown above changes the Href of all the anchor elements inside ‘divone’ to the url \u003ca href\u003d\"http://www.devcurry.com/\"\u003ewww.devcurry.com\u003c/a\u003e , and that too with just one line of jQuery code!\u003c/p\u003e\u003cp\u003eHere’s a related article \u003ca href\u003d\"http://www.devcurry.com/2009/05/how-to-convert-aspnet-bulleted-list.html\"\u003eHow to convert ASP.NET Bulleted List items or UnOrdered List to Hyperlinks using jQuery\u003c/a\u003e\u003c/p\u003e\u003cp\u003eSee a \u003cstrong\u003e\u003ca href\u003d\"http://jsbin.com/imiko3\" target\u003d\"_blank\"\u003eLive Demo\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\u003cdiv class\u003d\"blogger-post-footer\"\u003e\u003cimg width\u003d'1' height\u003d'1' src\u003d'https://blogger.googleusercontent.com/tracker/8980734269859237005-4987137450067919859?l\u003dwww.devcurry.com' alt\u003d'' /\u003e\u003c/div\u003e"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http://www.devcurry.com/feeds/4987137450067919859/comments/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"https://www.blogger.com/comment.g?blogID\u003d8980734269859237005\u0026postID\u003d4987137450067919859\u0026isPopup\u003dtrue","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http://www.blogger.com/feeds/8980734269859237005/posts/default/4987137450067919859"},{"rel":"self","type":"application/atom+xml","href":"http://www.blogger.com/feeds/8980734269859237005/posts/default/4987137450067919859"},{"rel":"alternate","type":"text/html","href":"http://www.devcurry.com/2010/12/change-url-of-all-anchor-elements-using.html","title":"Change Url of all Anchor Elements using jQuery"}],"author":[{"name":{"$t":"Suprotim Agarwal"},"uri":{"$t":"http://www.blogger.com/profile/08349831623922214390"},"email":{"$t":"noreply@blogger.com"},"gd$extendedProperty":{"xmlns$gd":"http://schemas.google.com/g/2005","name":"OpenSocialUserId","value":"16792399207439810270"}}],"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-8980734269859237005.post-1676826153689453331"},"published":{"$t":"2010-12-01T02:55:00.000-08:00"},"updated":{"$t":"2010-12-01T02:55:00.730-08:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"ASP.NET"}],"title":{"type":"text","$t":"ASP.NET GridView Data Caching"},"content":{"type":"html","$t":"\u003cp align\u003d\"justify\"\u003eContinuing my \u003ca href\u003d\"http://www.devcurry.com/2010/11/aspnet-gridview-tips-and-tricks.html\"\u003eASP.NET GridView Tips and Tricks series\u003c/a\u003e, here’s another one that shows how to adopt a caching mechanism in the ASP.NET GridView.\u003c/p\u003e\u003cp align\u003d\"justify\"\u003eWhen it comes to caching data in the GridView, most developers do the mistake of caching the entire page. Now if you have an ASP.NET Page with a UserControl containing a GridView, and you have enabled OutputCaching on the entire page, then the functionality will work as expected, if the GridView \u003cu\u003edoes not\u003c/u\u003e have paging enabled. \u003c/p\u003e\u003cp align\u003d\"justify\"\u003eHowever if the GridView has paging enabled on a page that uses OutputCaching and you try to navigate through the pages, you will find that the GridView behaves erratically.\u003c/p\u003e\u003cp align\u003d\"left\"\u003eSo in order to enable caching on an ASP.NET GridView, use data caching on the DataSource. Here’s how to do it using the \u003ca href\u003d\"http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.sqldatasource.enablecaching.aspx\" target\u003d\"_blank\"\u003eSqlDataSource.EnableCaching\u003c/a\u003e and \u003ca href\u003d\"http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.objectdatasource.enablecaching.aspx\" target\u003d\"_blank\"\u003eObjectDataSource.EnableCaching\u003c/a\u003e property respectively:\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eIf GridView is bound to SQLDataSource\u003c/strong\u003e\u003c/p\u003e\u003cpre class\u003d\"code\"\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003easp\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e:\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eSqlDataSource \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eID\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"objProduct\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003erunat\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"server\"\u003cbr /\u003e\u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eConnectionString\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"\u003c/span\u003e\u003cspan style\u003d\"BACKGROUND: yellow\"\u003e\u0026lt;%\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e$ \u003c/span\u003eConnectionStrings:NorthwindConnectionString \u003cspan style\u003d\"BACKGROUND: yellow\"\u003e%\u0026gt;\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\"\u003cbr /\u003e\u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eSelectCommand\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"SELECT [ProductID], [ProductName] FROM [Product]\"\u003cbr /\u003e\u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eEnableCaching\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"true\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eCacheDuration\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"3000\" \u0026gt;         \u003cbr /\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003easp\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e:\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eSqlDataSource\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003c/span\u003e\u003c/pre\u003e\u003cp align\u003d\"justify\"\u003eAs quoted in the MSDN documentation: \u003cem\u003eThe SqlDataSource control supports data caching. While data is cached, the Select method retrieves data from the cache rather than from the underlying database. When the cache expires, the Select method retrieves data from the underlying database, and then caches the data again.\u003c/em\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eIf GridView is bound to ObjectDataSource\u003c/strong\u003e\u003c/p\u003e\u003cpre class\u003d\"code\"\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003easp\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e:\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eObjectDataSource \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eID\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"objProduct\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003erunat\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"server\" \u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003cbr /\u003e   \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eSelectMethod\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"GetProduct\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eSelectCountMethod\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"GetProductCount\"\u003cbr /\u003e   \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eEnablePaging\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"True\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eTypeName\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"Product\"\u003cbr /\u003e   \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eEnableCaching\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"true\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eCacheDuration\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"3000\" \u0026gt;\u003c/span\u003e\u003c/pre\u003e\u003cp align\u003d\"justify\"\u003eAs quoted in the MSDN documentation: \u003cem\u003eThe ObjectDataSource control supports data caching. While data is cached, calls to the \u003c/em\u003e\u003cem\u003eSelect\u003c/em\u003e\u003cem\u003e method retrieve data from the cache rather than the \u003c/em\u003e\u003cem\u003eObjectDataSource\u003c/em\u003e\u003cem\u003e creating an instance of the business object and calling its data method. When the cache expires, the \u003c/em\u003e\u003cem\u003eSelect\u003c/em\u003e\u003cem\u003e method retrieves data from the business object, and then caches the data again.\u003c/em\u003e\u003c/p\u003e\u003cp align\u003d\"justify\"\u003eDepending on your application, this simple trick can improve the performance of your application.\u003c/p\u003e\u003cp align\u003d\"justify\"\u003e\u003cstrong\u003eNote:\u003c/strong\u003e The HTML markup is not cached when using this technique.\u003c/p\u003e\u003cp align\u003d\"justify\"\u003eRead some more \u003ca href\u003d\"http://www.devcurry.com/2010/11/aspnet-gridview-tips-and-tricks.html\"\u003e\u003cstrong\u003eGridView Tips and Tricks over here\u003c/strong\u003e\u003c/a\u003e\u003c/p\u003e\u003cdiv class\u003d\"blogger-post-footer\"\u003e\u003cimg width\u003d'1' height\u003d'1' src\u003d'https://blogger.googleusercontent.com/tracker/8980734269859237005-1676826153689453331?l\u003dwww.devcurry.com' alt\u003d'' /\u003e\u003c/div\u003e"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http://www.devcurry.com/feeds/1676826153689453331/comments/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"https://www.blogger.com/comment.g?blogID\u003d8980734269859237005\u0026postID\u003d1676826153689453331\u0026isPopup\u003dtrue","title":"1 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http://www.blogger.com/feeds/8980734269859237005/posts/default/1676826153689453331"},{"rel":"self","type":"application/atom+xml","href":"http://www.blogger.com/feeds/8980734269859237005/posts/default/1676826153689453331"},{"rel":"alternate","type":"text/html","href":"http://www.devcurry.com/2010/12/aspnet-gridview-data-caching.html","title":"ASP.NET GridView Data Caching"}],"author":[{"name":{"$t":"Suprotim Agarwal"},"uri":{"$t":"http://www.blogger.com/profile/08349831623922214390"},"email":{"$t":"noreply@blogger.com"},"gd$extendedProperty":{"xmlns$gd":"http://schemas.google.com/g/2005","name":"OpenSocialUserId","value":"16792399207439810270"}}],"thr$total":{"$t":"1"}},{"id":{"$t":"tag:blogger.com,1999:blog-8980734269859237005.post-3119677317500510761"},"published":{"$t":"2010-11-29T02:55:00.000-08:00"},"updated":{"$t":"2010-11-29T02:55:00.696-08:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"ASP.NET"}],"title":{"type":"text","$t":"Render Dynamic MetaTags in ASP.NET Page in Separate Lines"},"content":{"type":"html","$t":"\u003cp align\u003d\"justify\"\u003eI received a mail today from a DevCurry.com reader after reading my article \u003ca href\u003d\"http://www.dotnetcurry.com/ShowArticle.aspx?ID\u003d477\" target\u003d\"_blank\"\u003eSEO Enhancements with MetaKeywords and MetaDescription properties in ASP.NET 4.0\u003c/a\u003e. Her question was as follows:\u003c/p\u003e\u003cp align\u003d\"justify\"\u003e\u003cem\u003eIn ASP.NET using code with the HTMLMeta class, we can define the HTML meta elements on an ASP.NET page. But the output is all mixed in one line. Can i separate it ?\u003c/em\u003e\u003c/p\u003e\u003cp align\u003d\"justify\"\u003eLet me explain what she means. Here’s a sample code:\u003c/p\u003e\u003cpre class\u003d\"code\"\u003e\u003cspan style\u003d\"color:#2b91af;\"\u003eHtmlMeta \u003c/span\u003emetakeywrd \u003d \u003cspan style\u003d\"color:blue;\"\u003enew \u003c/span\u003e\u003cspan style\u003d\"color:#2b91af;\"\u003eHtmlMeta\u003c/span\u003e();\u003cbr /\u003emetakeywrd.Name \u003d \u003cspan style\u003d\"color:#a31515;\"\u003e\"keywords\"\u003c/span\u003e;\u003cbr /\u003emetakeywrd.Content \u003d \u003cspan style\u003d\"color:#a31515;\"\u003e\"add keywords here\"\u003c/span\u003e;\u003cbr /\u003e\u003cbr /\u003e\u003cspan style\u003d\"color:#2b91af;\"\u003eHtmlMeta \u003c/span\u003emetadesc \u003d \u003cspan style\u003d\"color:blue;\"\u003enew \u003c/span\u003e\u003cspan style\u003d\"color:#2b91af;\"\u003eHtmlMeta\u003c/span\u003e();\u003cbr /\u003emetadesc.Name \u003d \u003cspan style\u003d\"color:#a31515;\"\u003e\"description\"\u003c/span\u003e;\u003cbr /\u003emetadesc.Content \u003d \u003cspan style\u003d\"color:#a31515;\"\u003e\"add meta description here\"\u003c/span\u003e;\u003cbr /\u003e\u003cbr /\u003ePage.Header.Controls.Add(metakeywrd);\u003cbr /\u003ePage.Header.Controls.Add(metadesc);\u003c/pre\u003e\u003cp\u003eWhen the page renders, ASP.NET generates meta tags on the same line as shown below. \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://lh3.ggpht.com/_0j4bzarlOBg/TPM9Ew146JI/AAAAAAAABik/KNRsGh4OhNM/s1600-h/image%5B2%5D.png\"\u003e\u003cimg style\u003d\"BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline; BORDER-TOP: 0px; BORDER-RIGHT: 0px\" title\u003d\"image\" border\u003d\"0\" alt\u003d\"image\" src\u003d\"http://lh4.ggpht.com/_0j4bzarlOBg/TPM9FzZ1SnI/AAAAAAAABio/P69gKvVlyqs/image_thumb.png?imgmax\u003d800\" width\u003d\"544\" height\u003d\"105\" /\u003e\u003c/a\u003e \u003c/p\u003e\u003cp align\u003d\"justify\"\u003eShe wanted the meta tags generated on separate lines and I am not sure why!\u003c/p\u003e\u003cp align\u003d\"justify\"\u003eAnyways the solution is to did this line of code wherever a separate line is needed.\u003c/p\u003e\u003cpre class\u003d\"code\"\u003ePage.Header.Controls.Add(\u003cspan style\u003d\"color:blue;\"\u003enew \u003c/span\u003e\u003cspan style\u003d\"color:#2b91af;\"\u003eLiteralControl\u003c/span\u003e(\u003cspan style\u003d\"color:#a31515;\"\u003e\"\\n\"\u003c/span\u003e));\u003c/pre\u003e\u003cp\u003eHere’s the entire code again\u003c/p\u003e\u003cpre class\u003d\"code\"\u003ePage.Header.Controls.Add(\u003cspan style\u003d\"color:blue;\"\u003enew \u003c/span\u003e\u003cspan style\u003d\"color:#2b91af;\"\u003eLiteralControl\u003c/span\u003e(\u003cspan style\u003d\"color:#a31515;\"\u003e\"\\n\"\u003c/span\u003e));\u003cbr /\u003e\u003cspan style\u003d\"color:#2b91af;\"\u003eHtmlMeta \u003c/span\u003emetakeywrd \u003d \u003cspan style\u003d\"color:blue;\"\u003enew \u003c/span\u003e\u003cspan style\u003d\"color:#2b91af;\"\u003eHtmlMeta\u003c/span\u003e();\u003cbr /\u003emetakeywrd.Name \u003d \u003cspan style\u003d\"color:#a31515;\"\u003e\"keywords\"\u003c/span\u003e;\u003cbr /\u003emetakeywrd.Content \u003d \u003cspan style\u003d\"color:#a31515;\"\u003e\"add keywords here\"\u003c/span\u003e;\u003cbr /\u003e\u003cbr /\u003e\u003cspan style\u003d\"color:#2b91af;\"\u003eHtmlMeta \u003c/span\u003emetadesc \u003d \u003cspan style\u003d\"color:blue;\"\u003enew \u003c/span\u003e\u003cspan style\u003d\"color:#2b91af;\"\u003eHtmlMeta\u003c/span\u003e();\u003cbr /\u003emetadesc.Name \u003d \u003cspan style\u003d\"color:#a31515;\"\u003e\"description\"\u003c/span\u003e;\u003cbr /\u003emetadesc.Content \u003d \u003cspan style\u003d\"color:#a31515;\"\u003e\"add meta description here\"\u003c/span\u003e;\u003cbr /\u003e\u003cbr /\u003ePage.Header.Controls.Add(metakeywrd);\u003cbr /\u003ePage.Header.Controls.Add(\u003cspan style\u003d\"color:blue;\"\u003enew \u003c/span\u003e\u003cspan style\u003d\"color:#2b91af;\"\u003eLiteralControl\u003c/span\u003e(\u003cspan style\u003d\"color:#a31515;\"\u003e\"\\n\"\u003c/span\u003e));\u003cbr /\u003ePage.Header.Controls.Add(metadesc);\u003cbr /\u003ePage.Header.Controls.Add(\u003cspan style\u003d\"color:blue;\"\u003enew \u003c/span\u003e\u003cspan style\u003d\"color:#2b91af;\"\u003eLiteralControl\u003c/span\u003e(\u003cspan style\u003d\"color:#a31515;\"\u003e\"\\n\"\u003c/span\u003e));\u003c/pre\u003e\u003cp\u003e\u003ca href\u003d\"http://lh3.ggpht.com/_0j4bzarlOBg/TPM9GvmpD7I/AAAAAAAABis/O907CtW4P4I/s1600-h/image%5B5%5D.png\"\u003e\u003cimg style\u003d\"BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline; BORDER-TOP: 0px; BORDER-RIGHT: 0px\" title\u003d\"image\" border\u003d\"0\" alt\u003d\"image\" src\u003d\"http://lh6.ggpht.com/_0j4bzarlOBg/TPM9IEj25zI/AAAAAAAABiw/WtOMiK_MPnU/image_thumb%5B1%5D.png?imgmax\u003d800\" width\u003d\"544\" height\u003d\"138\" /\u003e\u003c/a\u003e \u003c/p\u003e\u003cp align\u003d\"justify\"\u003eAs you can see now, the meta tags are generated on separate lines. If anyone knows a better way or knows the reason why is this really needed, I would love to hear it!\u003c/p\u003e\u003cdiv class\u003d\"blogger-post-footer\"\u003e\u003cimg width\u003d'1' height\u003d'1' src\u003d'https://blogger.googleusercontent.com/tracker/8980734269859237005-3119677317500510761?l\u003dwww.devcurry.com' alt\u003d'' /\u003e\u003c/div\u003e"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http://www.devcurry.com/feeds/3119677317500510761/comments/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"https://www.blogger.com/comment.g?blogID\u003d8980734269859237005\u0026postID\u003d3119677317500510761\u0026isPopup\u003dtrue","title":"3 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http://www.blogger.com/feeds/8980734269859237005/posts/default/3119677317500510761"},{"rel":"self","type":"application/atom+xml","href":"http://www.blogger.com/feeds/8980734269859237005/posts/default/3119677317500510761"},{"rel":"alternate","type":"text/html","href":"http://www.devcurry.com/2010/11/render-dynamic-metatags-in-aspnet-page.html","title":"Render Dynamic MetaTags in ASP.NET Page in Separate Lines"}],"author":[{"name":{"$t":"Suprotim Agarwal"},"uri":{"$t":"http://www.blogger.com/profile/08349831623922214390"},"email":{"$t":"noreply@blogger.com"},"gd$extendedProperty":{"xmlns$gd":"http://schemas.google.com/g/2005","name":"OpenSocialUserId","value":"16792399207439810270"}}],"thr$total":{"$t":"3"}},{"id":{"$t":"tag:blogger.com,1999:blog-8980734269859237005.post-484122223450481536"},"published":{"$t":"2010-11-23T02:55:00.000-08:00"},"updated":{"$t":"2010-11-23T02:55:00.153-08:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"ASP.NET"}],"title":{"type":"text","$t":"Using the Deployment retail\u003dtrue attribute - ASP.NET Settings"},"content":{"type":"html","$t":"\u003cp align\u003d\"justify\"\u003eOne of the most common errors while deploying ASP.NET websites into a production environment is to leave the Trace and Debug enabled or leave the custom errors attribute disabled. \u003c/p\u003e\u003cp align\u003d\"justify\"\u003e\u003cstrong\u003eNote:\u003c/strong\u003e To improve performance, the recommended practice while deploying an ASP.NET application is to set Trace and Debug attributes to false and to improve security, leave the Custom Errors attribute enabled.\u003c/p\u003e\u003cp align\u003d\"justify\"\u003eIf you are a web administrator and have several websites deployed on your server, then here’s a simple tip to override these deployment mistakes. Just add the following element inside your machine.config file \u003c/p\u003e\u003cpre class\u003d\"code\"\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:#a31515;\"\u003esystem.web\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e  \u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:#a31515;\"\u003edeployment \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eretail\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\u003c/span\u003e\"\u003cspan style\u003d\"color:blue;\"\u003etrue\u003c/span\u003e\" \u003cspan style\u003d\"color:blue;\"\u003e/\u0026gt;\u003cbr /\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:#a31515;\"\u003esystem.web\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003c/span\u003e\u003c/pre\u003e\u003cp align\u003d\"justify\"\u003e\u003cem\u003eWhen retail is set to true, ASP.NET disables certain configuration settings such as trace output, custom errors, and debug capabilities.\u003c/em\u003e\u003c/p\u003e\u003cp align\u003d\"justify\"\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This value can only be set at the machine level, not at the application level.\u003c/p\u003e\u003cp align\u003d\"justify\"\u003eAlso make sure that you read this post from ScottGu’s blog \u003ca href\u003d\"http://weblogs.asp.net/scottgu/archive/2010/09/18/important-asp-net-security-vulnerability.aspx\" target\u003d\"_blank\"\u003eImportant: ASP.NET Security Vulnerability\u003c/a\u003e. This patch has to be applied even if you have the attribute retail\u003dtrue on your machines.\u003c/p\u003e\u003cdiv class\u003d\"blogger-post-footer\"\u003e\u003cimg width\u003d'1' height\u003d'1' src\u003d'https://blogger.googleusercontent.com/tracker/8980734269859237005-484122223450481536?l\u003dwww.devcurry.com' alt\u003d'' /\u003e\u003c/div\u003e"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http://www.devcurry.com/feeds/484122223450481536/comments/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"https://www.blogger.com/comment.g?blogID\u003d8980734269859237005\u0026postID\u003d484122223450481536\u0026isPopup\u003dtrue","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http://www.blogger.com/feeds/8980734269859237005/posts/default/484122223450481536"},{"rel":"self","type":"application/atom+xml","href":"http://www.blogger.com/feeds/8980734269859237005/posts/default/484122223450481536"},{"rel":"alternate","type":"text/html","href":"http://www.devcurry.com/2010/11/using-deployment-retailtrue-attribute.html","title":"Using the Deployment retail\u003dtrue attribute - ASP.NET Settings"}],"author":[{"name":{"$t":"Suprotim Agarwal"},"uri":{"$t":"http://www.blogger.com/profile/08349831623922214390"},"email":{"$t":"noreply@blogger.com"},"gd$extendedProperty":{"xmlns$gd":"http://schemas.google.com/g/2005","name":"OpenSocialUserId","value":"16792399207439810270"}}],"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-8980734269859237005.post-8324356971489707186"},"published":{"$t":"2010-11-20T02:55:00.000-08:00"},"updated":{"$t":"2010-11-20T02:55:00.037-08:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"ASP.NET"}],"title":{"type":"text","$t":"Merge GridView Header Columns"},"content":{"type":"html","$t":"\u003cp align\u003d\"justify\"\u003eContinuing my \u003ca href\u003d\"http://www.devcurry.com/2010/11/aspnet-gridview-tips-and-tricks.html\"\u003eASP.NET GridView Tips and Tricks series\u003c/a\u003e, here’s another one that shows how to create a merged column in a GridView Header. \u003c/p\u003e\u003cp align\u003d\"justify\"\u003eThe code shown here is based on my previous post \u003ca href\u003d\"http://www.devcurry.com/2010/11/bind-aspnet-gridview-to-custom-object.html\"\u003eBind ASP.NET GridView to a Custom Object or Collection with Paging and Sorting\u003c/a\u003e. In this example, we will add a RowCreated  event to the GridView as shown below:\u003c/p\u003e\u003cpre class\u003d\"code\"\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003easp\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e:\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eGridView \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eID\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"gvCustom\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003erunat\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"server\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eAutoGenerateColumns\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"false\"\u003cbr /\u003e        \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eAllowPaging\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"true\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003ePageSize\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"5\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eOnPageIndexChanging\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"gvPaging\"\u003cbr /\u003e        \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eOnRowCreated\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"gvCustom_RowCreated\"\u0026gt;\u003c/span\u003e\u003c/pre\u003e\u003cp\u003eFinally write the following code  in the RowCreated event\u003c/p\u003e\u003cp\u003eC#\u003c/p\u003e\u003cpre class\u003d\"code\"\u003e\u003cspan style\u003d\"color:blue;\"\u003eprotected void \u003c/span\u003egvCustom_RowCreated(\u003cspan style\u003d\"color:blue;\"\u003eobject \u003c/span\u003esender,\u003cbr /\u003e    \u003cspan style\u003d\"color:#2b91af;\"\u003eGridViewRowEventArgs \u003c/span\u003ee)\u003cbr /\u003e{\u003cbr /\u003e    \u003cspan style\u003d\"color:blue;\"\u003eif \u003c/span\u003e(e.Row.RowType \u003d\u003d \u003cspan style\u003d\"color:#2b91af;\"\u003eDataControlRowType\u003c/span\u003e.Header)\u003cbr /\u003e    {\u003cbr /\u003e        \u003cspan style\u003d\"color:#2b91af;\"\u003eGridView \u003c/span\u003eheader \u003d (\u003cspan style\u003d\"color:#2b91af;\"\u003eGridView\u003c/span\u003e)sender;\u003cbr /\u003e        \u003cspan style\u003d\"color:#2b91af;\"\u003eGridViewRow \u003c/span\u003egvr \u003d \u003cspan style\u003d\"color:blue;\"\u003enew \u003c/span\u003e\u003cspan style\u003d\"color:#2b91af;\"\u003eGridViewRow\u003c/span\u003e(0, 0,\u003cbr /\u003e            \u003cspan style\u003d\"color:#2b91af;\"\u003eDataControlRowType\u003c/span\u003e.Header,\u003cbr /\u003e            \u003cspan style\u003d\"color:#2b91af;\"\u003eDataControlRowState\u003c/span\u003e.Insert);\u003cbr /\u003e        \u003cspan style\u003d\"color:#2b91af;\"\u003eTableCell \u003c/span\u003etCell \u003d \u003cspan style\u003d\"color:blue;\"\u003enew \u003c/span\u003e\u003cspan style\u003d\"color:#2b91af;\"\u003eTableCell\u003c/span\u003e();\u003cbr /\u003e        tCell.Text \u003d \u003cspan style\u003d\"color:#a31515;\"\u003e\"DevCurry Employee Information\"\u003c/span\u003e;\u003cbr /\u003e        tCell.ColumnSpan \u003d 4;\u003cbr /\u003e        tCell.HorizontalAlign \u003d \u003cspan style\u003d\"color:#2b91af;\"\u003eHorizontalAlign\u003c/span\u003e.Center;\u003cbr /\u003e        gvr.Cells.Add(tCell);\u003cbr /\u003e        \u003cspan style\u003d\"color:green;\"\u003e// Add the Merged TableCell to the GridView Header\u003cbr /\u003e        \u003c/span\u003e\u003cspan style\u003d\"color:#2b91af;\"\u003eTable \u003c/span\u003etbl \u003d gvCustom.Controls[0] \u003cspan style\u003d\"color:blue;\"\u003eas \u003c/span\u003e\u003cspan style\u003d\"color:#2b91af;\"\u003eTable\u003c/span\u003e;\u003cbr /\u003e        \u003cspan style\u003d\"color:blue;\"\u003eif \u003c/span\u003e(tbl !\u003d \u003cspan style\u003d\"color:blue;\"\u003enull\u003c/span\u003e)\u003cbr /\u003e        {\u003cbr /\u003e            tbl.Rows.AddAt(0, gvr);\u003cbr /\u003e        }\u003cbr /\u003e    }\u003cbr /\u003e}\u003c/pre\u003e\u003cp\u003eVB.NET (Converted Code)\u003c/p\u003e\u003cpre class\u003d\"code\"\u003e\u003cspan style\u003d\"color:blue;\"\u003eProtected Sub \u003c/span\u003egvCustom_RowCreated(\u003cspan style\u003d\"color:blue;\"\u003eByVal \u003c/span\u003esender \u003cspan style\u003d\"color:blue;\"\u003eAs Object\u003c/span\u003e,\u003cbr /\u003e\u003cspan style\u003d\"color:blue;\"\u003eByVal \u003c/span\u003ee \u003cspan style\u003d\"color:blue;\"\u003eAs \u003c/span\u003eGridViewRowEventArgs)\u003cbr /\u003e    \u003cspan style\u003d\"color:blue;\"\u003eIf \u003c/span\u003ee.Row.RowType \u003d DataControlRowType.Header \u003cspan style\u003d\"color:blue;\"\u003eThen\u003cbr /\u003e        Dim \u003c/span\u003eheader \u003cspan style\u003d\"color:blue;\"\u003eAs \u003c/span\u003eGridView \u003d \u003cspan style\u003d\"color:blue;\"\u003eCType\u003c/span\u003e(sender, GridView)\u003cbr /\u003e        \u003cspan style\u003d\"color:blue;\"\u003eDim \u003c/span\u003egvr \u003cspan style\u003d\"color:blue;\"\u003eAs New \u003c/span\u003eGridViewRow(0, 0, DataControlRowType.Header,\u003cbr /\u003eDataControlRowState.Insert)\u003cbr /\u003e        \u003cspan style\u003d\"color:blue;\"\u003eDim \u003c/span\u003etCell \u003cspan style\u003d\"color:blue;\"\u003eAs New \u003c/span\u003eTableCell()\u003cbr /\u003e        tCell.Text \u003d \u003cspan style\u003d\"color:darkred;\"\u003e\"DevCurry Employee Information\"\u003cbr /\u003e        \u003c/span\u003etCell.ColumnSpan \u003d 4\u003cbr /\u003e        tCell.HorizontalAlign \u003d HorizontalAlign.Center\u003cbr /\u003e        gvr.Cells.Add(tCell)\u003cbr /\u003e        \u003cspan style\u003d\"color:green;\"\u003e' Add the Merged TableCell to the GridView Header\u003cbr /\u003e        \u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003eDim \u003c/span\u003etbl \u003cspan style\u003d\"color:blue;\"\u003eAs \u003c/span\u003eTable \u003d TryCast(gvCustom.Controls(0), Table)\u003cbr /\u003e        \u003cspan style\u003d\"color:blue;\"\u003eIf \u003c/span\u003etbl \u003cspan style\u003d\"color:blue;\"\u003eIsNot Nothing Then\u003cbr /\u003e            \u003c/span\u003etbl.Rows.AddAt(0, gvr)\u003cbr /\u003e        \u003cspan style\u003d\"color:blue;\"\u003eEnd If\u003cbr /\u003e    End If\u003cbr /\u003eEnd Sub\u003c/span\u003e\u003c/pre\u003e\u003cp align\u003d\"justify\"\u003eIn the code above, we have created a TableCell and set properties like the ColumnSpan (for merging columns), Text and HorizontalAlign. The TableCell is then added to the GridView Header.\u003c/p\u003e\u003cp\u003eOUTPUT\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://lh3.ggpht.com/_0j4bzarlOBg/TOdg5R-2MVI/AAAAAAAABhA/OJFcfNVXHGA/s1600-h/image%5B2%5D.png\"\u003e\u003cimg style\u003d\"BORDER-RIGHT-WIDTH: 0px; DISPLAY: inline; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px\" title\u003d\"image\" border\u003d\"0\" alt\u003d\"image\" src\u003d\"http://lh3.ggpht.com/_0j4bzarlOBg/TOdg6DHbn-I/AAAAAAAABhE/RjyeRcwY1iw/image_thumb.png?imgmax\u003d800\" width\u003d\"281\" height\u003d\"190\" /\u003e\u003c/a\u003e \u003c/p\u003e\u003cp\u003eRead some more \u003ca href\u003d\"http://www.devcurry.com/2010/11/aspnet-gridview-tips-and-tricks.html\"\u003e\u003cstrong\u003eGridView Tips and Tricks over here\u003c/strong\u003e\u003c/a\u003e\u003c/p\u003e\u003cdiv class\u003d\"blogger-post-footer\"\u003e\u003cimg width\u003d'1' height\u003d'1' src\u003d'https://blogger.googleusercontent.com/tracker/8980734269859237005-8324356971489707186?l\u003dwww.devcurry.com' alt\u003d'' /\u003e\u003c/div\u003e"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http://www.devcurry.com/feeds/8324356971489707186/comments/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"https://www.blogger.com/comment.g?blogID\u003d8980734269859237005\u0026postID\u003d8324356971489707186\u0026isPopup\u003dtrue","title":"1 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http://www.blogger.com/feeds/8980734269859237005/posts/default/8324356971489707186"},{"rel":"self","type":"application/atom+xml","href":"http://www.blogger.com/feeds/8980734269859237005/posts/default/8324356971489707186"},{"rel":"alternate","type":"text/html","href":"http://www.devcurry.com/2010/11/merge-gridview-header-columns.html","title":"Merge GridView Header Columns"}],"author":[{"name":{"$t":"Suprotim Agarwal"},"uri":{"$t":"http://www.blogger.com/profile/08349831623922214390"},"email":{"$t":"noreply@blogger.com"},"gd$extendedProperty":{"xmlns$gd":"http://schemas.google.com/g/2005","name":"OpenSocialUserId","value":"16792399207439810270"}}],"thr$total":{"$t":"1"}},{"id":{"$t":"tag:blogger.com,1999:blog-8980734269859237005.post-4040710971854719173"},"published":{"$t":"2010-11-16T02:55:00.000-08:00"},"updated":{"$t":"2010-11-16T02:55:00.041-08:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Free EBook"},{"scheme":"http://www.blogger.com/atom/ns#","term":"ASP.NET"}],"title":{"type":"text","$t":"ASP.NET with Razor Syntax Beta 3 Free EBook and Tutorials"},"content":{"type":"html","$t":"\u003cp align\u003d\"justify\"\u003eMicrosoft recently released a book and few samples to help you learn how to create dynamic Web content using ASP.NET Web Pages with the Razor syntax.\u003c/p\u003e\u003cp align\u003d\"justify\"\u003e\u003ca href\u003d\"http://download.microsoft.com/download/D/6/D/D6DFC36D-604F-448A-A189-15EC874ABAAF/ASPNETWebPagesWithRazorSyntax-Book-Beta3.pdf\" target\u003d\"_blank\"\u003eASP.NET Web Pages With Razor Syntax Beta3 Book\u003c/a\u003e\u003c/p\u003e\u003cp align\u003d\"justify\"\u003e\u003ca href\u003d\"http://download.microsoft.com/download/D/6/D/D6DFC36D-604F-448A-A189-15EC874ABAAF/ASPNET-Razor-Beta3-Samples.zip\" target\u003d\"_blank\"\u003eASP.NET Razor Beta3 Samples\u003c/a\u003e\u003c/p\u003e\u003cp align\u003d\"justify\"\u003e\u003ca href\u003d\"http://download.microsoft.com/download/D/6/D/D6DFC36D-604F-448A-A189-15EC874ABAAF/AspNetWebPagesBeta3.msi\" target\u003d\"_blank\"\u003eASP.NET Web Pages Beta3 msi\u003c/a\u003e\u003c/p\u003e\u003cp align\u003d\"justify\"\u003e\u003cem\u003eASP.NET Web Pages with Razor Syntax is a web framework and part of \u003cstrong\u003e\u003ca href\u003d\"http://www.dotnetcurry.com/ShowArticle.aspx?ID\u003d591\" target\u003d\"_blank\"\u003eWebMatrix\u003c/a\u003e\u003c/strong\u003e which gives you everything you need to build Web sites using Windows.\u003c/em\u003e\u003c/p\u003e\u003cp align\u003d\"justify\"\u003eYou can also checkout how to use the \u003ca href\u003d\"http://www.dotnetcurry.com/BrowseArticles.aspx?CatID\u003d67\" target\u003d\"_blank\"\u003e\u003cstrong\u003eRazor View Engine in ASP.NET MVC 3\u003c/strong\u003e\u003c/a\u003e\u003c/p\u003e\u003cdiv class\u003d\"blogger-post-footer\"\u003e\u003cimg width\u003d'1' height\u003d'1' src\u003d'https://blogger.googleusercontent.com/tracker/8980734269859237005-4040710971854719173?l\u003dwww.devcurry.com' alt\u003d'' /\u003e\u003c/div\u003e"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http://www.devcurry.com/feeds/4040710971854719173/comments/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"https://www.blogger.com/comment.g?blogID\u003d8980734269859237005\u0026postID\u003d4040710971854719173\u0026isPopup\u003dtrue","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http://www.blogger.com/feeds/8980734269859237005/posts/default/4040710971854719173"},{"rel":"self","type":"application/atom+xml","href":"http://www.blogger.com/feeds/8980734269859237005/posts/default/4040710971854719173"},{"rel":"alternate","type":"text/html","href":"http://www.devcurry.com/2010/11/aspnet-with-razor-syntax-beta-3-free.html","title":"ASP.NET with Razor Syntax Beta 3 Free EBook and Tutorials"}],"author":[{"name":{"$t":"Suprotim Agarwal"},"uri":{"$t":"http://www.blogger.com/profile/08349831623922214390"},"email":{"$t":"noreply@blogger.com"},"gd$extendedProperty":{"xmlns$gd":"http://schemas.google.com/g/2005","name":"OpenSocialUserId","value":"16792399207439810270"}}],"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-8980734269859237005.post-9186429290432801360"},"published":{"$t":"2010-11-13T02:55:00.000-08:00"},"updated":{"$t":"2010-11-13T02:55:00.296-08:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"ASP.NET"}],"title":{"type":"text","$t":"Set Width of GridView TextBox in Edit mode"},"content":{"type":"html","$t":"\u003cp align\u003d\"justify\"\u003eTo modify the width of a TextBox (inside the GridView control) when the GridView is in Edit Mode, use any of the two approaches:\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUsing ControlStyle\u003c/strong\u003e\u003c/p\u003e\u003cpre class\u003d\"code\"\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003easp\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e:\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eGridView \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eID\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"gvCustom\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003erunat\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"server\"\u0026gt;\u003cbr /\u003e    \u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eColumns\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e        \u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003easp\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e:\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eBoundField \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eDataField\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"EmpID\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eHeaderText\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"EmployeeID\" \u0026gt;\u003cbr /\u003e            \u003cem\u003e\u0026lt;\u003c/em\u003e\u003c/span\u003e\u003cem\u003e\u003cspan style\u003d\"color:maroon;\"\u003eControlStyle \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eWidth\u003c/span\u003e\u003c/em\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003cem\u003e\u003d\"150\" /\u0026gt;\u003c/em\u003e\u003cbr /\u003e        \u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003easp\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e:\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eBoundField\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e    \u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eColumns\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003easp\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e:\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eGridView\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003c/span\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eUse ControlStyle CSS Class (Recommended)\u003c/strong\u003e\u003c/p\u003e\u003cpre class\u003d\"code\"\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003estyle \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003etype\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"text/css\"\u0026gt;\u003cbr /\u003e\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003e.cssWdth\u003cbr /\u003e\u003c/span\u003e{\u003cbr /\u003e    \u003cspan style\u003d\"color:red;\"\u003ewidth\u003c/span\u003e: \u003cspan style\u003d\"color:blue;\"\u003e150px\u003c/span\u003e;\u003cbr /\u003e}\u003cbr /\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003estyle\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003c/span\u003e\u003c/pre\u003e\u003cp\u003eand in the GridView\u003c/p\u003e\u003cpre class\u003d\"code\"\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003easp\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e:\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eGridView \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eID\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"gvCustom\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003erunat\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"server\"\u0026gt;\u003cbr /\u003e    \u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eColumns\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e        \u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003easp\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e:\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eBoundField \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eDataField\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"EmpID\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eHeaderText\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"EmployeeID\"\u003cbr /\u003e        \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003e\u003cem\u003eControlStyle-CssClass\u003c/em\u003e\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003cem\u003e\u003d\"cssWdth\"\u003c/em\u003e /\u0026gt;\u003cbr /\u003e    \u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eColumns\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003easp\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e:\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eGridView\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003c/span\u003e\u003cbr /\u003e\u003c/pre\u003e\u003cp\u003eCheck some additional \u003cstrong\u003e\u003ca href\u003d\"http://www.devcurry.com/2010/11/aspnet-gridview-tips-and-tricks.html\"\u003eGridView Tips and Tricks over here\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\u003cdiv class\u003d\"blogger-post-footer\"\u003e\u003cimg width\u003d'1' height\u003d'1' src\u003d'https://blogger.googleusercontent.com/tracker/8980734269859237005-9186429290432801360?l\u003dwww.devcurry.com' alt\u003d'' /\u003e\u003c/div\u003e"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http://www.devcurry.com/feeds/9186429290432801360/comments/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"https://www.blogger.com/comment.g?blogID\u003d8980734269859237005\u0026postID\u003d9186429290432801360\u0026isPopup\u003dtrue","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http://www.blogger.com/feeds/8980734269859237005/posts/default/9186429290432801360"},{"rel":"self","type":"application/atom+xml","href":"http://www.blogger.com/feeds/8980734269859237005/posts/default/9186429290432801360"},{"rel":"alternate","type":"text/html","href":"http://www.devcurry.com/2010/11/set-width-of-gridview-textbox-in-edit.html","title":"Set Width of GridView TextBox in Edit mode"}],"author":[{"name":{"$t":"Suprotim Agarwal"},"uri":{"$t":"http://www.blogger.com/profile/08349831623922214390"},"email":{"$t":"noreply@blogger.com"},"gd$extendedProperty":{"xmlns$gd":"http://schemas.google.com/g/2005","name":"OpenSocialUserId","value":"16792399207439810270"}}],"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-8980734269859237005.post-5475773632500246585"},"published":{"$t":"2010-11-12T03:55:00.000-08:00"},"updated":{"$t":"2010-11-12T03:55:00.233-08:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"JavaScript"},{"scheme":"http://www.blogger.com/atom/ns#","term":"ASP.NET"}],"title":{"type":"text","$t":"Call ASP.NET Handler (ASHX) using JavaScript"},"content":{"type":"html","$t":"\u003cp align\u003d\"justify\"\u003eI was working on an application which used AJAX and needed the XMLHttpRequest object to communicate with an ASP.NET Generic Handler (.ashx), which contained some server-side logic. Here’s a working prototype if you have a similar requirement\u003c/p\u003e\u003cp align\u003d\"justify\"\u003eWe will first create an ASP.NET handler (ashx) which accepts a ‘Name’ parameter and greets the user by appending ‘Hello’ to it.\u003c/p\u003e\u003cp align\u003d\"justify\"\u003eWe will then call this ASP.NET Handler (ashx) via JavaScript by passing in a value entered in an ASP.NET TextBox.\u003c/p\u003e\u003cp align\u003d\"justify\"\u003e\u003cstrong\u003eASP.NET Handler\u003c/strong\u003e\u003c/p\u003e\u003cp align\u003d\"justify\"\u003eRight click your ASP.NET Project \u0026gt; Add New Item \u0026gt; Generic Handler \u0026gt; call it SayHello.ashx. Add the following code:\u003c/p\u003e\u003cpre class\u003d\"code\"\u003e\u003cspan style\u003d\"BACKGROUND: yellow\"\u003e\u0026lt;%\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e@ \u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eWebHandler \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eLanguage\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"C#\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eClass\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"SayHello\" \u003c/span\u003e\u003cspan style\u003d\"BACKGROUND: yellow\"\u003e%\u0026gt;\u003cbr /\u003e\u003cbr /\u003e\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003eusing \u003c/span\u003eSystem;\u003cbr /\u003e\u003cspan style\u003d\"color:blue;\"\u003eusing \u003c/span\u003eSystem.Web;\u003cbr /\u003e\u003cbr /\u003e\u003cspan style\u003d\"color:blue;\"\u003epublic class \u003c/span\u003e\u003cspan style\u003d\"color:#2b91af;\"\u003eSayHello \u003c/span\u003e: \u003cspan style\u003d\"color:#2b91af;\"\u003eIHttpHandler \u003c/span\u003e{\u003cbr /\u003e   \u003cbr /\u003e    \u003cspan style\u003d\"color:blue;\"\u003epublic void \u003c/span\u003eProcessRequest (\u003cspan style\u003d\"color:#2b91af;\"\u003eHttpContext \u003c/span\u003econtext) {\u003cbr /\u003e        context.Response.ContentType \u003d \u003cspan style\u003d\"color:#a31515;\"\u003e\"text/plain\"\u003c/span\u003e;\u003cbr /\u003e        \u003cspan style\u003d\"color:blue;\"\u003estring \u003c/span\u003eparam \u003d context.Request.Params[\u003cspan style\u003d\"color:#a31515;\"\u003e\"Name\"\u003c/span\u003e];\u003cbr /\u003e        context.Response.Write(\u003cspan style\u003d\"color:#a31515;\"\u003e\"Hello, \" \u003c/span\u003e+ param);\u003cbr /\u003e    }\u003cbr /\u003e\u003cbr /\u003e    \u003cspan style\u003d\"color:blue;\"\u003epublic bool \u003c/span\u003eIsReusable {\u003cbr /\u003e        \u003cspan style\u003d\"color:blue;\"\u003eget \u003c/span\u003e{\u003cbr /\u003e            \u003cspan style\u003d\"color:blue;\"\u003ereturn false\u003c/span\u003e;\u003cbr /\u003e        }\u003cbr /\u003e    }\u003cbr /\u003e\u003cbr /\u003e}\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eJavaScript Code\u003c/strong\u003e\u003c/p\u003e\u003cpre class\u003d\"code\"\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ehtml \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003exmlns\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"http://www.w3.org/1999/xhtml\"\u0026gt;\u003cbr /\u003e\u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ehead \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003erunat\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"server\"\u0026gt;\u003cbr /\u003e\u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003etitle\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003c/span\u003eCall ASHX in JavaScript by DevCurry.com\u003cspan style\u003d\"color:blue;\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003etitle\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e\u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003escript \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003etype\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"text/javascript\"\u0026gt;\u003cbr /\u003e    var \u003c/span\u003ehttpReq \u003d \u003cspan style\u003d\"color:blue;\"\u003enull\u003c/span\u003e;\u003cbr /\u003e    \u003cspan style\u003d\"color:blue;\"\u003efunction \u003c/span\u003ecallASHX() {\u003cbr /\u003e        httpReq \u003d XMLHttpRequest();\u003cbr /\u003e        httpReq.onreadystatechange \u003d XMLHttpRequestCompleted;\u003cbr /\u003e        httpReq.open(\u003cspan style\u003d\"color:maroon;\"\u003e\"GET\"\u003c/span\u003e, \u003cspan style\u003d\"color:maroon;\"\u003e\"SayHello.ashx?Name\u003d\" \u003c/span\u003e+\u003cbr /\u003e            document.getElementById(\u003cspan style\u003d\"color:maroon;\"\u003e'\u003c/span\u003e\u003cspan style\u003d\"BACKGROUND: yellow;color:maroon;\" \u003e\u0026lt;%\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003e\u003dtxtName.ClientID\u003c/span\u003e\u003cspan style\u003d\"BACKGROUND: yellow;color:maroon;\" \u003e%\u0026gt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003e'\u003c/span\u003e).value, \u003cspan style\u003d\"color:blue;\"\u003etrue\u003c/span\u003e);\u003cbr /\u003e        httpReq.send(\u003cspan style\u003d\"color:blue;\"\u003enull\u003c/span\u003e);\u003cbr /\u003e    }\u003cbr /\u003e\u003cbr /\u003e    \u003cspan style\u003d\"color:#006400;\"\u003e// initialize XMLHttpRequest object\u003cbr /\u003e    \u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003efunction \u003c/span\u003eXMLHttpRequest() {\u003cbr /\u003e        \u003cspan style\u003d\"color:blue;\"\u003evar \u003c/span\u003exmlHttp;\u003cbr /\u003e        \u003cspan style\u003d\"color:blue;\"\u003etry \u003c/span\u003e{\u003cbr /\u003e            \u003cspan style\u003d\"color:#006400;\"\u003e// Opera 8.0+, Firefox, Safari\u003cbr /\u003e            \u003c/span\u003exmlHttp \u003d \u003cspan style\u003d\"color:blue;\"\u003enew \u003c/span\u003eXMLHttpRequest();\u003cbr /\u003e        }\u003cbr /\u003e        \u003cspan style\u003d\"color:blue;\"\u003ecatch \u003c/span\u003e(e) {\u003cbr /\u003e            \u003cspan style\u003d\"color:#006400;\"\u003e// IEBrowsers\u003cbr /\u003e            \u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003etry \u003c/span\u003e{\u003cbr /\u003e                xmlHttp \u003d \u003cspan style\u003d\"color:blue;\"\u003enew \u003c/span\u003eActiveXObject(\u003cspan style\u003d\"color:maroon;\"\u003e\"Msxml2.XMLHTTP\"\u003c/span\u003e);\u003cbr /\u003e            }\u003cbr /\u003e            \u003cspan style\u003d\"color:blue;\"\u003ecatch \u003c/span\u003e(e) {\u003cbr /\u003e                \u003cspan style\u003d\"color:blue;\"\u003etry \u003c/span\u003e{\u003cbr /\u003e                    xmlHttp \u003d \u003cspan style\u003d\"color:blue;\"\u003enew \u003c/span\u003eActiveXObject(\u003cspan style\u003d\"color:maroon;\"\u003e\"Microsoft.XMLHTTP\"\u003c/span\u003e);\u003cbr /\u003e                }\u003cbr /\u003e                \u003cspan style\u003d\"color:blue;\"\u003ecatch \u003c/span\u003e(e) {\u003cbr /\u003e                    \u003cspan style\u003d\"color:blue;\"\u003ereturn false\u003c/span\u003e;\u003cbr /\u003e                }\u003cbr /\u003e            }\u003cbr /\u003e        }\u003cbr /\u003e        \u003cspan style\u003d\"color:blue;\"\u003ereturn \u003c/span\u003exmlHttp;\u003cbr /\u003e    }\u003cbr /\u003e\u003cbr /\u003e    \u003cspan style\u003d\"color:blue;\"\u003efunction \u003c/span\u003eXMLHttpRequestCompleted()\u003cbr /\u003e    {\u003cbr /\u003e        \u003cspan style\u003d\"color:blue;\"\u003eif \u003c/span\u003e(httpReq.readyState \u003d\u003d 4)\u003cbr /\u003e        {\u003cbr /\u003e            \u003cspan style\u003d\"color:blue;\"\u003etry\u003cbr /\u003e            \u003c/span\u003e{\u003cbr /\u003e                alert(httpReq.responseText);\u003cbr /\u003e            }\u003cbr /\u003e            \u003cspan style\u003d\"color:blue;\"\u003ecatch \u003c/span\u003e(e)\u003cbr /\u003e            {\u003cbr /\u003e            }\u003cbr /\u003e        }\u003cbr /\u003e    }\u003cbr /\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003escript\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ehead\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e\u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ebody\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e    \u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eform \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eid\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"form1\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003erunat\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"server\"\u0026gt;\u003cbr /\u003e    \u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ediv\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e        \u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003easp\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e:\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eTextBox \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eID\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"txtName\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003erunat\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"server\"\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003easp\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e:\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eTextBox\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e       \u0026lt;\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003easp\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e:\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eButton \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eID\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"btnCall\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003erunat\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"server\" \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eText\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"Enter Text and Click\"\u003cbr /\u003e            \u003c/span\u003e\u003cspan style\u003d\"color:red;\"\u003eOnClientClick\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u003d\"callASHX();\"/\u0026gt;\u003cbr /\u003e    \u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ediv\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e    \u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003eform\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ebody\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003cbr /\u003e\u0026lt;/\u003c/span\u003e\u003cspan style\u003d\"color:maroon;\"\u003ehtml\u003c/span\u003e\u003cspan style\u003d\"color:blue;\"\u003e\u0026gt;\u003c/span\u003e\u003c/pre\u003e\u003cp align\u003d\"justify\"\u003eIn the code shown above, on the asp.net button click event, we call the callASHX() javascript function.  In this function, we first initialize our XMLHttpRequest object by calling the XMLHttpRequest() function and asynchronously invoke an .ashx file called SayHello.ashx and pass the textbox value to it.  If the request to the .ashx handler completes successfully, the XMLHttpRequestCompleted() function is invoked and the user is greeted.\u003cbr /\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://lh3.ggpht.com/_0j4bzarlOBg/TNpN1Crc17I/AAAAAAAABgA/wEUvTRcWTlY/s1600-h/image%5B2%5D.png\"\u003e\u003cimg style\u003d\"BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline; BORDER-TOP: 0px; BORDER-RIGHT: 0px\" title\u003d\"image\" border\u003d\"0\" alt\u003d\"image\" src\u003d\"http://lh4.ggpht.com/_0j4bzarlOBg/TNpN2I3lfbI/AAAAAAAABgE/SFyKEw8BKxo/image_thumb.png?imgmax\u003d800\" width\u003d\"506\" height\u003d\"263\" /\u003e\u003c/a\u003e\u003c/p\u003e\u003cdiv class\u003d\"blogger-post-footer\"\u003e\u003cimg width\u003d'1' height\u003d'1' src\u003d'https://blogger.googleusercontent.com/tracker/8980734269859237005-5475773632500246585?l\u003dwww.devcurry.com' alt\u003d'' /\u003e\u003c/div\u003e"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http://www.devcurry.com/feeds/5475773632500246585/comments/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"https://www.blogger.com/comment.g?blogID\u003d8980734269859237005\u0026postID\u003d5475773632500246585\u0026isPopup\u003dtrue","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http://www.blogger.com/feeds/8980734269859237005/posts/default/5475773632500246585"},{"rel":"self","type":"application/atom+xml","href":"http://www.blogger.com/feeds/8980734269859237005/posts/default/5475773632500246585"},{"rel":"alternate","type":"text/html","href":"http://www.devcurry.com/2010/11/call-aspnet-handler-ashx-using.html","title":"Call ASP.NET Handler (ASHX) using JavaScript"}],"author":[{"name":{"$t":"Suprotim Agarwal"},"uri":{"$t":"http://www.blogger.com/profile/08349831623922214390"},"email":{"$t":"noreply@blogger.com"},"gd$extendedProperty":{"xmlns$gd":"http://schemas.google.com/g/2005","name":"OpenSocialUserId","value":"16792399207439810270"}}],"thr$total":{"$t":"0"}}]}});